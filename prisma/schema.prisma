// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(uuid())
  name                String
  email               String                @unique
  password            String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  token               String?
  DisconnectionPlans  DisconnectionPlans[]
  EmergencyContacts   EmergencyContacts[]
  ProgressStatistics  ProgressStatistics[]
  ActivitySuggestions ActivitySuggestions[]

  @@map("users")
}

model DisconnectionPlans {
  id         String   @id @default(uuid())
  userId     String
  startTime  DateTime
  endTime    DateTime
  activities Json
  status     String   @default("active")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("disconnection_plans")
}

model EmergencyContacts {
  id        String   @id @default(uuid())
  userId    String
  name      String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("emergency_contacts")
}

model ProgressStatistics {
  id                  String   @id @default(uuid())
  userId              String
  date                DateTime
  timeOffline         Float
  activitiesCompleted Json
  createdAt           DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@map("progress_statistics")
}

model ActivitySuggestions {
  id          String   @id @default(uuid())
  userId      String
  category    String
  description String
  duration    Float
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@map("activity_suggestions")
}
